<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="icon button tooltip import file" xml:space="preserve">
    <value>Import midi file
Right click to select file dialog type</value>
  </data>
  <data name="icon button tooltip import folder" xml:space="preserve">
    <value>Import folder
Imports all midi files in selected folder and it's all subfolders.
This may take a while when you select a folder that contains multiple layers of subfolders.</value>
  </data>
  <data name="icon button tooltip clear playlist" xml:space="preserve">
    <value>Clear Playlist</value>
  </data>
  <data name="setting label select ui language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="setting tooltip language" xml:space="preserve">
    <value>Change Midibard UI language</value>
  </data>
  <data name="icon button tooltip help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="text ensemble mode running" xml:space="preserve">
    <value>Ensemble mode running</value>
  </data>
  <data name="text playlist is empty" xml:space="preserve">
    <value>Import midi files to start performing!</value>
  </data>
  <data name="text tracks in playlist" xml:space="preserve">
    <value>{0} tracks in current playlist.</value>
    
  </data>
  <data name="text current playing" xml:space="preserve">
    <value>Playing:</value>
  </data>
  <data name="play mode random" xml:space="preserve">
    <value>Random</value>
  </data>
  <data name="play mode list ordered" xml:space="preserve">
    <value>List ordered</value>
  </data>
  <data name="play mode list repeat" xml:space="preserve">
    <value>List repeat</value>
  </data>
  <data name="play mode single repeat" xml:space="preserve">
    <value>Single repeat</value>
  </data>
  <data name="text select playmode" xml:space="preserve">
    <value>Playmode: </value>
  </data>
  <data name="play mode single" xml:space="preserve">
    <value>Single</value>
  </data>
  <data name="icon button tooltip music control panel" xml:space="preserve">
    <value>Music control panel</value>
  </data>
  <data name="icon button tooltip settings panel" xml:space="preserve">
    <value>Settings panel</value>
  </data>
  <data name="icon button tooltip mini player" xml:space="preserve">
    <value>Mini player</value>
  </data>
  <data name="window tooltip track selection" xml:space="preserve">
    <value>Track selection
MidiBard will only perform enabled tracks
Left click to enable/disable a track, Right click to solo it</value>
  </data>
  <data name="setting label transpose all" xml:space="preserve">
    <value>Transpose</value>
  </data>
  <data name="setting label auto adapt notes" xml:space="preserve">
    <value>Auto adapt notes</value>
  </data>
  <data name="setting tooltip auto adapt notes" xml:space="preserve">
    <value>Adapt high/low pitch notes when they are out of range into 3 octaves we can play</value>
  </data>
  <data name="setting label set progress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="setting label set play speed" xml:space="preserve">
    <value>Play speed</value>
  </data>
  <data name="setting label monitor ensemble" xml:space="preserve">
    <value>Monitor ensemble</value>
  </data>
  <data name="setting tooltip monitor ensemble" xml:space="preserve">
    <value>Auto start ensemble when entering in-game party ensemble mode</value>
  </data>
  <data name="setting label auto open MidiBard" xml:space="preserve">
    <value>Auto open MidiBard</value>
  </data>
  <data name="setting tooltip auto open MidiBardTooltip" xml:space="preserve">
    <value>Auto open or close MidiBard window when entering/exiting performance mode</value>
  </data>
  <data name="text Import in progress" xml:space="preserve">
    <value>Import in progress...</value>
  </data>
  <data name="setting label select instrument" xml:space="preserve">
    <value>Instrument</value>
  </data>
  <data name="setting label auto switch instrument by file name" xml:space="preserve">
    <value>Auto switch instrument(file name)</value>
  </data>
  <data name="setting label auto transpose by file name" xml:space="preserve">
    <value>Auto transpose(file name)</value>
  </data>
  <data name="setting tooltip label auto switch instrument by file name" xml:space="preserve">
    <value>Auto switch instrument on demand. If you need this, 
please add #instrument name# before file name. 
E.g. #harp#demo.mid</value>
  </data>
  <data name="setting tooltip auto transpose by file name" xml:space="preserve">
    <value>Auto transpose notes on demand. If you need this, 
please add #transpose number# before file name. 
E.g. #-12#demo.mid</value>
  </data>
  <data name="setting tooltip transpose all" xml:space="preserve">
    <value>Transpose, measured by semitone. 
Right click to reset.</value>
  </data>
  <data name="setting tooltip set speed" xml:space="preserve">
    <value>Set the speed of events playing</value>
  </data>
  <data name="setting tooltip set progress" xml:space="preserve">
    <value>Set the playing progress 
Right click to restart current playback</value>
  </data>
  <data name="setting tooltip select instrument" xml:space="preserve">
    <value>Select current instrument 
Right click to quit performance mode</value>
  </data>
  <data name="text listening midi device" xml:space="preserve">
    <value>Listening input device: </value>
  </data>
  <data name="setting label midi input device" xml:space="preserve">
    <value>MIDI Input</value>
  </data>
  <data name="setting tooltip select input device" xml:space="preserve">
    <value>Choose external midi input device. Right click to reset.</value>
  </data>
  <data name="icon button tooltip clearplaylist tootltip" xml:space="preserve">
    <value>Double click to clear playlist</value>
  </data>
  <data name="icon button tooltip search playlist" xml:space="preserve">
    <value>Search playlist</value>
  </data>
  <data name="setting label theme color" xml:space="preserve">
    <value>UI color</value>
  </data>
  <data name="hint search textbox" xml:space="preserve">
    <value>Enter to search</value>
  </data>
  <data name="setting label song delay" xml:space="preserve">
    <value>Delay</value>
  </data>
  <data name="setting tooltip song delay" xml:space="preserve">
    <value>Delay time before play next track.</value>
  </data>
  <data name="setting label transpose by track" xml:space="preserve">
    <value>Transpose per track</value>
  </data>
  <data name="setting tooltip transpose by track" xml:space="preserve">
    <value>Transpose per track, right click to reset all tracks' transpose offset back to zero.</value>
  </data>
  <data name="setting label auto restart listening" xml:space="preserve">
    <value>Auto restart listening</value>
  </data>
  <data name="setting tooltip auto restart listening" xml:space="preserve">
    <value>Try auto restart listening last used midi device</value>
  </data>
  <data name="icon button tooltip visualization" xml:space="preserve">
    <value>Tracks visualization window
Right click to reset visualizer window position</value>
  </data>
  <data name="icon button tooltip visualizer follow playback tooltip" xml:space="preserve">
    <value>Following current playback progress</value>
  </data>
  <data name="w32 file dialog" xml:space="preserve">
    <value>Win32 file dialog</value>
  </data>
  <data name="imgui file dialog" xml:space="preserve">
    <value>ImGui file dialog</value>
  </data>
  <data name="setting label tone mode" xml:space="preserve">
    <value>Tone mode</value>
  </data>
  <data name="setting tooltip tone mode" xml:space="preserve">
    <value>Choose how MidiBard will handle MIDI channels and ProgramChange events(current only affects guitar tone changing)</value>
  </data>
  <data name="tone mode off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="tone mode standard" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="tone mode simple" xml:space="preserve">
    <value>Simple</value>
  </data>
  <data name="tone mode override" xml:space="preserve">
    <value>Override</value>
  </data>
  <data name="tone mode off tooltip" xml:space="preserve">
    <value>Off: Does not take over game's guitar tone control.</value>
  </data>
  <data name="tone mode standard tooltip" xml:space="preserve">
    <value>Standard: Standard midi channel and ProgramChange handling, each channel will keep it's program state separately.</value>
  </data>
  <data name="tone mode simple tooltip" xml:space="preserve">
    <value>Simple: Simple ProgramChange handling, ProgramChange event on any channel will change all channels' program state. (This is BardMusicPlayer's default behavior.)</value>
  </data>
  <data name="tone mode override tooltip" xml:space="preserve">
    <value>Override by track: Assign guitar tone manually for each track and ignore ProgramChange events.</value>
  </data>
  <data name="setting label auto switch instrument bmp" xml:space="preserve">
    <value>Auto switch instrument(midi track name)</value>
  </data>
  <data name="setting tooltip auto switch transpose instrument bmp trackname" xml:space="preserve">
    <value>Transpose/switch instrument based on first enabled midi track name(BMP rules)</value>
  </data>
  <data name="text start event listening" xml:space="preserve">
    <value>Start event listening on </value>
  </data>
  <data name="notice midi device error" xml:space="preserve">
    <value>"{0}" is not available now.
Please check log for further error information.</value>
  </data>
  <data name="notice midi device stop listening" xml:space="preserve">
    <value>Stop event listening on </value>
  </data>
  <data name="icon button tooltip ensemble panel" xml:space="preserve">
    <value>Ensemble panel</value>
  </data>
  <data name="setting label low latency mode" xml:space="preserve">
    <value>Low latency mode</value>
  </data>
  <data name="setting tooltip low latency mode" xml:space="preserve">
    <value>Use alternative note input method, May slightly reduce input latency but will affect guitar tone switching accuracy. 
Only recommended while using Midi keyboard.</value>
  </data>
  <data name="setting label auto set background frame limit" xml:space="preserve">
    <value>Auto set background frame limit</value>
  </data>
  <data name="setting tooltip auto set background frame limit" xml:space="preserve">
    <value>Auto disable background frame limit when entering performance mode and re-enable it when quit performance</value>
  </data>
  <data name="window title standalone playlist" xml:space="preserve">
    <value>MidiBard Playlist</value>
  </data>
  <data name="icon button tooltip playlist menu" xml:space="preserve">
    <value>Show playlist menu</value>
  </data>
  <data name="setting label standalone playlist window" xml:space="preserve">
    <value>Standalone playlist window</value>
  </data>
  <data name="window title ensemble panel" xml:space="preserve">
    <value>MidiBard local ensemble control</value>
  </data>
  <data name="ensemble stop ensemble" xml:space="preserve">
    <value>Stop ensemble</value>
  </data>
  <data name="ensemble begin ensemble ready check" xml:space="preserve">
    <value>Begin ensemble ready check</value>
  </data>
  <data name="ensemble update instruments" xml:space="preserve">
    <value>Update Instruments, right click to pull back instrument</value>
  </data>
  <data name="ensemble open midi config directory" xml:space="preserve">
    <value>Open current midi config file directory</value>
  </data>
  <data name="ensemble open midi config file" xml:space="preserve">
    <value>Open current midi config file</value>
  </data>
  <data name="ensemble Delete and reset current file config" xml:space="preserve">
    <value>Delete and reset current file config</value>
  </data>
  <data name="ensemble unmute other clients" xml:space="preserve">
    <value>Unmute other clients</value>
  </data>
  <data name="ensemble mute other clients" xml:space="preserve">
    <value>Mute other clients</value>
  </data>
  <data name="ensemble Minimize other clients" xml:space="preserve">
    <value>Minimize other clients, right click to restore them.</value>
  </data>
  <data name="icon button tooltip sync settings" xml:space="preserve">
    <value>Sync all Midibard settings on this pc</value>
  </data>
  <data name="ensemble Save default performers" xml:space="preserve">
    <value>Save default performers</value>
  </data>
  <data name="ensemble Select a song from playlist" xml:space="preserve">
    <value>Select a song from playlist</value>
  </data>
  <data name="ensemble combo tooltip assign track character" xml:space="preserve">
    <value>Assign track to a character. Right click to reset assigned character</value>
  </data>
  <data name="ensemble config Draw ensemble progress indicator on visualizer" xml:space="preserve">
    <value>Draw ensemble progress indicator on visualizer</value>
  </data>
  <data name="ensemble config Ensemble indicator delay" xml:space="preserve">
    <value>Ensemble indicator delay</value>
  </data>
  <data name="ensemble config Update instrument when begin ensemble" xml:space="preserve">
    <value>Update instrument when begin ensemble</value>
  </data>
  <data name="window title visualizor" xml:space="preserve">
    <value>MidiBard track visualizer</value>
  </data>
  <data name="setting group label ensemble settings" xml:space="preserve">
    <value>Ensemble settings</value>
  </data>
  <data name="setting group label general settings" xml:space="preserve">
    <value>General settings</value>
  </data>
  <data name="setting group label performance settings" xml:space="preserve">
    <value>Performance settings</value>
  </data>
  <data name="setting label sync clients" xml:space="preserve">
    <value>Enable local clients sync</value>
  </data>
  <data name="setting tooltip sync clients" xml:space="preserve">
    <value>Allow midibard settings and midi file settings auto sync between all midibard instances on this pc</value>
  </data>
  <data name="language english" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="language chs" xml:space="preserve">
    <value>Chinese Simplified</value>
  </data>
  <data name="language cht" xml:space="preserve">
    <value>Chinese Traditional</value>
  </data>
  <data name="language japanese" xml:space="preserve">
    <value>Japanese</value>
  </data>
  <data name="language german" xml:space="preserve">
    <value>German</value>
  </data>
  <data name="menu label sync playlist" xml:space="preserve">
    <value>Sync playlist between clients</value>
  </data>
  <data name="menu label save search as playlist" xml:space="preserve">
    <value>Save playlist search results as...</value>
  </data>
  <data name="menu label new playlist" xml:space="preserve">
    <value>Create a new playlist</value>
  </data>
  <data name="menu label clone current playlist" xml:space="preserve">
    <value>Save current playlist as...</value>
  </data>
  <data name="menu label open playlist" xml:space="preserve">
    <value>Open playlist</value>
  </data>
  <data name="menu label save playlist" xml:space="preserve">
    <value>Save playlist</value>
  </data>
  <data name="menu text recent playlist" xml:space="preserve">
    <value>Recent playlists</value>
  </data>
  <data name="text file copy" xml:space="preserve">
    <value>(Copy)</value>
  </data>
  <data name="text midibard playlist" xml:space="preserve">
    <value>Midibard playlist</value>
  </data>
  <data name="window title choose new playlist save location" xml:space="preserve">
    <value>Choose new playlist save location</value>
  </data>
  <data name="text new playlist" xml:space="preserve">
    <value>New playlist</value>
  </data>
  <data name="menu item load playlist" xml:space="preserve">
    <value>Load</value>
  </data>
  <data name="menu item open in file explorer" xml:space="preserve">
    <value>Open in file explorer</value>
  </data>
  <data name="menu item open in text editor" xml:space="preserve">
    <value>Open in text editor</value>
  </data>
  <data name="menu item remove from recent list" xml:space="preserve">
    <value>Remove from recent list</value>
  </data>
</root>